How to Set Up a Dual Boot System (Windows + Ubuntu) the Right Way (11 Steps Total)
Installing a dual-boot system with Windows and Ubuntu gives you the flexibility to switch between 
two powerful operating systems on the same machine. While the process is manageable, it must be 
done carefully to avoid data loss or boot issues. This guide walks you through the process from 
preparation to post-installation testing.
Understand BIOS/UEFI and Secure Boot Settings
Before you begin downloading or partitioning anything, it’s important to understand how your 
system boots. Most modern computers use UEFI, while older systems use the traditional BIOS. 
This matters because Ubuntu handles UEFI and BIOS booting differently. Restart your computer 
and enter the firmware settings by pressing a designated key during boot-up, such as F2, DEL, or 
ESC. Inside the settings menu, check if Secure Boot is enabled. Secure Boot prevents unauthorized 
operating systems from loading and can interfere with Ubuntu’s installation. If your Ubuntu version
supports Secure Boot, you can leave it on, otherwise disable it temporarily during installation. Also 
check that your system is set to boot in UEFI mode rather than Legacy mode, as this ensures 
smoother compatibility with both Windows and Ubuntu on the same drive.
Back Up Your Data
Before making any changes to your system, it’s essential to back up all of your important data. 
Copy your documents, photos, and work-related files to an external hard drive or a cloud storage 
service. Dual booting involves resizing partitions and modifying boot settings, which can 
occasionally go wrong. Having a backup ensures you can recover your information in the event of 
accidental deletion or disk corruption. Do not skip this step even if you feel confident—the risk is 
small but never zero.
Check Windows System Requirements and Disk Space
Next, ensure your current Windows system has enough free disk space to accommodate Ubuntu. 
Open File Explorer, right-click your main hard drive (usually C:), and select Properties. Ubuntu 
requires at least 20 GB of space, but 50 GB or more is recommended for practical use. Then, press 
Win + R, type “msinfo32,” and press Enter. This opens the system summary window. Look for the 
“BIOS Mode” field—if it says UEFI, your system is using modern firmware, which is ideal. If it 
says Legacy, the setup process will be slightly different but still possible.
Create a Partition for Ubuntu
To make space for Ubuntu, open Windows Disk Management by pressing Win + X and choosing 
“Disk Management.” Find your main drive, right-click it, and choose “Shrink Volume.” Specify the 
amount of space you want to shrink—usually at least 50,000 MB for 50 GB. After shrinking, you 
will see a new section labeled “Unallocated.” This space will be used by Ubuntu during installation.
Do not format or assign a drive letter to it in Windows.
Download Ubuntu and Create a Bootable USB Drive
Visit ubuntu.com and download the latest LTS (Long Term Support) version of Ubuntu. Save the 
ISO file to your computer. Next, download Rufus or another USB writing tool. Insert a USB drive 
with at least 4 GB of space and open Rufus. Select the ISO file and make sure the partition scheme 
matches your system (GPT for UEFI). Click Start and wait for the process to finish. When it’s done,
safely eject the USB drive.
Boot from the USB Drive
Insert the bootable USB into your computer and restart it. Enter the boot menu by pressing the 
appropriate key (F12, F2, ESC, or DEL, depending on your system) and select your USB device. If 
you see two USB options, choose the one marked UEFI. The Ubuntu boot menu will load, giving 
you the option to try Ubuntu or install it directly. Select “Install Ubuntu” to begin the installation 
process.
Begin the Installation Process
The Ubuntu installer will guide you through selecting your language, keyboard layout, and whether 
to download updates or third-party software during installation. When asked how you want to 
install Ubuntu, you’ll likely see the option “Install Ubuntu alongside Windows Boot Manager.” 
Choose this option if available, as it simplifies the process. If it’s not shown, choose “Something 
Else” to manually assign the unallocated space to Ubuntu. In the partition editor, create a root 
partition (mount point “/”) using the unallocated space. You may also create a swap partition if 
desired, though Ubuntu handles swap files automatically on newer systems.
Set Up User Details and Finalize Installation
You’ll be asked to create a user account, set a password, and name your computer. You can choose 
whether to log in automatically or require a password at each login. After entering these details, the 
installer will begin copying files to your system. This process can take anywhere from 10 to 30 
minutes depending on your hardware. When the installation is complete, you will be prompted to 
remove your USB drive and reboot the system.
Test GRUB and Boot Both Systems
On reboot, the GRUB bootloader menu will appear, allowing you to choose between Ubuntu and 
Windows. Use the arrow keys to select the system you want to boot into. Start by testing Ubuntu to 
ensure the installation was successful. Check your Wi-Fi, display resolution, and software settings. 
Then reboot and select Windows to verify that your existing data and programs are still intact. If 
GRUB does not appear and your system boots directly into Windows, you may need to enter your 
BIOS and set Ubuntu as the default boot device.
Troubleshoot Boot Issues if Necessary
If Ubuntu boots but Windows does not appear in the GRUB menu, boot into Ubuntu and open a 
terminal. Run the command “sudo update-grub” and reboot. GRUB will scan for all available 
operating systems and should add Windows automatically. If your computer still does not show the 
boot menu, double-check your BIOS boot order or consider using a tool like Boot-Repair from a 
live Ubuntu session. Avoid making changes unless you’re sure what they do, as incorrect bootloader
modifications can make both systems unbootable.
Maintain Your Dual Boot Setup
Now that both systems are installed and working, it’s important to keep them updated. In Windows, 
continue using Windows Update as usual. In Ubuntu, open the terminal and run “sudo apt update 
&& sudo apt upgrade” regularly. If you ever need to remove Ubuntu, you must delete its partitions 
and restore the Windows bootloader, which requires using a Windows recovery drive or bootable 
media. Likewise, if you upgrade to a new version of Windows, it might overwrite the GRUB 
bootloader—so always have a live Ubuntu USB handy just in case you need to repair the boot menu
again.
With your dual boot system complete and stable, you now have the flexibility to switch between 
Windows for daily use and Ubuntu for development, experimentation, or open-source tools. 
Remember to back up both systems periodically and stay informed on updates for both platforms.
